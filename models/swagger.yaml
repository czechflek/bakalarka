
        
        
        
swagger: '2.0'
info:
  title: Thesis API
  description: Explore the magical world!
  version: "1.0.0"
# the domain of the service
host: localhost:80
# array of all schemes that your API supports
schemes:
  - https
# will be prefixed to all paths
basePath: /v1
produces:
  - application/json

paths:
  /objects:
    get:
      summary: Objects
      description: |
        The Objects endpoint returns information about the in-game objects
        near a given location. The response includes the buildings and monsters.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      tags:
        - Objects
        - Location
      responses:
        200:
          description: An array of all game objects
          schema:
            type: array
            items:
              $ref: '#/definitions/Objects'
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /objects/buildings:
    get:
      summary: Buildings
      description: |
        The Buildings endpoint returns information about in-game *buildings*
        near a given location. The response includes the display name
        and other details about each building.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      tags:
        - Objects
        - Buildings
        - Location
      responses:
        200:
          description: An array of buildings
          schema:
            type: array
            items:
              $ref: '#/definitions/Building'
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /objects/monsters:
    get:
      summary: Monsters
      description: |
        The Monsters endpoint returns information about in-game *buildings*
        near a given location. The response includes the display name
        and other details about each monster.
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      tags:
        - Objects
        - Monsters
        - Location
      responses:
        200:
          description: An array of monsters
          schema:
            type: array
            items:
              $ref: '#/definitions/Monster'
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /user:
    get:
      summary: User Profile
      description: The User Profile endpoint returns information about the logged user
      tags:
        - User
      parameters:
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      responses:
        200:
          description: Profile information for a user
          schema:
            $ref: '#/definitions/Profile'
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /user/login:
    get:
      summary: Log in the user
      description: Client exchanges one-time access code with the server for OAuth2 authentication.
      tags:
        - User
      parameters:
        - name: one_time_code
          in: query
          description: One-time access code
          required: true
          type: string
      responses:
        200:
          description: OK
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /user/distance:
    get:
      summary: Distance Traveled
      description: |
        The Distance endpoint returns distance traveled by the user. The response includes distance for various timespans. 
      parameters:
        - name: latitude
          in: query
          description: Latitude component of location.
          required: true
          type: number
          format: double
        - name: longitude
          in: query
          description: Longitude component of location.
          required: true
          type: number
          format: double
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      tags:
        - User
        - Location
      responses:
        200:
          description: An array of products
          schema:
            type: array
            items:
              $ref: '#/definitions/Building'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /user/inventory:
    get:
      summary: User Inventory
      description: The User Inventory endpoint returns inventory of the logged user
      tags:
        - User
      parameters:
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      responses:
        200:
          description: User's inventory
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /update/monster:
    get:
      summary: Fight Monster
      description: Use this endpoint to notify the server about the rosult of figting a monster 
      tags:
        - Monsters
        - Update
      parameters:
        - name: monster_id
          in: query
          description: ID of the killed monster
          required: true
          type: integer
          format: int64
        - name: result
          in: query
          description: Result of the fight
          required: true
          type: integer
          format: int64
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string
      responses:
        200:
          description: OK
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
  /update/shop:
    get:
      summary: Buy From Shop
      description: Buy the item selected by the user from a shop. If the user doesn't have enough money or no space left in his inventory, error is returned.
      tags:
        - Buildings
        - Update
      parameters:
        - name: building_id
          in: query
          description: ID of the selected shop
          required: true
          type: integer
          format: int64
        - name: item_id
          in: query
          description: ID of the bought item
          required: true
          type: integer
          format: int64
        - name: id_token
          in: query
          description: ID token of the user
          required: true
          type: string          
      responses:
        200:
          description: User's inventory
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
        403:
          description: Permission Denied
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
            
            
            
definitions:
  Objects:
    type: object
    properties:
      buildings:
        type: array
        items:
          $ref: '#/definitions/Building'
      monsters:
        type: array
        items:
          $ref: '#/definitions/Monster'  

  Building:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: ID of the building
      type:
        type: integer
        description: Type of the building
      inventory:
        type: array
        items:
          $ref: '#/definitions/Item' 

  Monster:
    type: object
    properties:
      id:
        type: integer
        format: int64
        description: Type of the building
      type:
        type: integer
        description: Type of the building
      inventory:
        type: array
        items:
          $ref: '#/definitions/Item' 

  Profile:
    type: object
    properties:
      nick:
        type: string
        description: Nick of the user
      stats:
        $ref: '#/definitions/UserStats'

  Item:
    type: object
    properties:
      id:
        type: string
        description: Unique identifier for the activity
  
  UserStats:
    type: object
    properties:
      hp:
        type: integer
        description: Health
      xp:
        type: integer
        description: Experience
      gold:
        type: integer
        description: Gold - common currency
      diamonds:
        type: integer
        description: Diamonds - premium currency

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      fields:
        type: string
